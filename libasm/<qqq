BITS 64
global asm_strspn

section .text

asm_strspn:
    push rbp
    mov rbp, rsp

    xor r8, r8  ; r8 レジスタを使用

while_strspn:
    cmp BYTE [rdi], 0
    jz strspn_end
    xor rax, rax
    push rcx    ; rcx と rdx をスタックにプッシュ
    push rdx

    mov rdx, rcx  ; rdx と rcx の入れ替え
    mov rcx, rsi

    movzx rcx, BYTE [rcx]
    jmp asm_strchr
back:
    pop rdx    ; スタックから rcx と rdx をポップ
    pop rcx
    test rax, rax
    jz strspn_end
    inc r8
    inc rdi
    jmp while_strspn

strspn_end:
    mov rax, r8
    mov rsp, rbp
    pop rbp
    ret

asm_strchr:
    push rbp
    mov rbp, rsp
    xor rax, rax

strchr_while:
    mov al, BYTE [rdi]
    cmp BYTE [rdi], sil
    jz strchr_found
    cmp BYTE [rdi], 0
    jz strchr_end
    inc rdi
    jmp strchr_while

strchr_found:
    mov rax, rdi

strchr_end:
    mov rsp, rbp
    pop rbp
    jmp back
