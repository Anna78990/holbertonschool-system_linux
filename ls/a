#include "_ls.h"


/**
 * op_index - search index which contans option
 * @argv: array of argv to search
 * Return: found index or length + 1 if not found
 */
int *op_index(char **argv)
{
	int i, ctr = 0;
	int *op_arr = NULL;

	for (i = 0; argv[i]; i++)
	{
		if (argv[i][0] == '-')
			ctr++;
	}
	if (ctr == 0)
	{
		return (NULL);
	}
	else
		op_arr = (int *)malloc(sizeof(int) * ctr);
	ctr = 0;
	for (i = 0; argv[i]; i++)
	{
		if (argv[i][0] == '-')
			op_arr[ctr++] = i;
	}
	return (op_arr);
}

vagrant@vagrant:~/holbertonschool-system_linux/ls$ valgrind ./hls test -1
==9296== Memcheck, a memory error detector
==9296== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9296== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9296== Command: ./hls test -1
==9296== 
==9296== Invalid read of size 4
==9296==    at 0x1095F0: main (in /home/vagrant/holbertonschool-system_linux/ls/hls)
==9296==  Address 0x4a48044 is 0 bytes after a block of size 4 alloc'd
==9296==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==9296==    by 0x109754: op_index (in /home/vagrant/holbertonschool-system_linux/ls/hls)
==9296==    by 0x109586: main (in /home/vagrant/holbertonschool-system_linux/ls/hls)
==9296== 
ls.c
_ls.c
line_ls.c
str.h
test.c
main.c
hls.h
test_symlink.c
ls.h
option.c
file_symb
line_ls.h
==9296== 
==9296== HEAP SUMMARY:
==9296==     in use at exit: 0 bytes in 0 blocks
==9296==   total heap usage: 3 allocs, 3 frees, 33,844 bytes allocated
==9296== 
==9296== All heap blocks were freed -- no leaks are possible
==9296== 
==9296== For lists of detected and suppressed errors, rerun with: -s
==9296== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
