#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int id;
    int laps;
} Car;

void race_state(int *id, size_t size)
{
    static Car *cars = NULL;
    static size_t car_count = 0;
    
    // If size is 0, free the allocated memory and reset the car count
    if (size == 0) {
        free(cars);
        cars = NULL;
        car_count = 0;
        return;
    }
    
    size_t i, j;
    int found;
    
    // Iterate over the given IDs to check if each car already exists or needs to be added
    for (i = 0; i < size; i++) {
        found = 0;
        
        // Check if the car already exists
        for (j = 0; j < car_count; j++) {
            if (cars[j].id == id[i]) {
                cars[j].laps++;  // Increment the laps of the existing car
                found = 1;
                break;
            }
        }
        
        // If the car does not exist, add it to the array
        if (!found) {
            car_count++;
            cars = realloc(cars, sizeof(Car) * car_count);
            cars[car_count - 1].id = id[i];
            cars[car_count - 1].laps = 0;
            
            printf("Car %d joined the race\n", id[i]);
        }
    }
    
    // Print the state of the race
    printf("Race state:\n");
    for (i = 0; i < car_count; i++) {
        printf("Car %d [%d laps]\n", cars[i].id, cars[i].laps);
    }
}
